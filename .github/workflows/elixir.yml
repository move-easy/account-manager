name: Elixir CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:12
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.16.2"
          otp-version: "26.2.4" # Define the OTP version [required]
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install Mix Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Check Formatting
        run: mix format --check-formatted

      - name: Run Credo
        run: mix credo --strict

      - name: Install dependencies
        run: mix deps.get

      - name: Run tests
        run: mix test

      - name: Run digest
        run: mix phx.digest

  deploy:
    needs: build # Will only run if the test job succeeds
    if: github.ref == 'refs/heads/main' # Only run this job if it is on the master branch

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: main # Checkout out master instead of the latest commit
          fetch-depth: 0 # Checkout the whole branch

      - uses: mhanberg/gigalixir-action@v0.4.0
        with:
          GIGALIXIR_USERNAME: ${{ production.secrets.GIGALIXIR_USERNAME }}
          GIGALIXIR_PASSWORD: ${{ production.secrets.GIGALIXIR_PASSWORD }}
          GIGALIXIR_APP: ${{ production.secrets.GIGALIXIR_APP }}
          SSH_PRIVATE_KEY: ${{ production.secrets.SSH_PRIVATE_KEY }}
          MIGRATIONS: false
